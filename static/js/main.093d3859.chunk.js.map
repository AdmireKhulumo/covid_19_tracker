{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/covidimage.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","raised","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","border","direction","alignItems","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","covidimage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.093d3859.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\tif (!confirmed) {\n\t\treturn \"Loading...\";\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\traised\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tInfected{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={confirmed.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tNumber of active cases of COVID 19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\traised\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent raised>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tRecovered{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={recovered.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tNumber of recoveries from COVID 19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\traised\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tDeaths{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={deaths.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}{\" \"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tNumber of deaths caused by COVID 19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n\tlet changeableUrl = url;\n\n\tif (country) {\n\t\tchangeableUrl = `${url}/countries/${country}`;\n\t}\n\n\ttry {\n\t\tconst {\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\n\t\t} = await axios.get(changeableUrl);\n\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/daily`);\n\n\t\tconst modifiedData = data.map((dailyData) => ({\n\t\t\tconfirmed: dailyData.confirmed.total,\n\t\t\tdeaths: dailyData.deaths.total,\n\t\t\tdate: dailyData.reportDate,\n\t\t}));\n\n\t\treturn modifiedData;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport const fetchCountries = async () => {\n\ttry {\n\t\tconst {\n\t\t\tdata: { countries },\n\t\t} = await axios.get(`${url}/countries`);\n\n\t\treturn countries.map((country) => country.name);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport Card from \"@material-ui/core/Card\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await fetchDailyData());\n\t\t};\n\n\t\tfetchAPI();\n\t}, []);\n\n\tconst lineChart = dailyData.length ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\t\tlabel: \"Infected\",\n\t\t\t\t\t\tborderColor: \"#3333ff\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\tborderColor: \"red\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 0, 0.5)\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconsole.log(confirmed, recovered, deaths);\n\n\tconst barChart = confirmed ? (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels: [\"Infected\", \"Recovered\", \"Deaths\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"People\",\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\"rgba(0 ,0 ,255 , 0.5)\",\n\t\t\t\t\t\t\t\"rgba(0,255,0,0.5)\",\n\t\t\t\t\t\t\t\"rgba(255,0,0,0.5)\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tlegend: { display: false },\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Card raised className={styles.container}>\n\t\t\t\t{country ? barChart : lineChart}\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport {\n\tNativeSelect,\n\tFormControl,\n\tCard,\n\tTypography,\n\tGrid,\n} from \"@material-ui/core\";\n\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetFetchedCountries(await fetchCountries());\n\t\t};\n\n\t\tfetchAPI();\n\t}, [setFetchedCountries]);\n\n\treturn (\n\t\t<div className={styles.border}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"flex-start\"\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography variant=\"overline\">Pick Country: </Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<FormControl className={styles.formControl}>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tonChange={(e) => handleCountryChange(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t\t\t\t{fetchedCountries.map((country, i) => (\n\t\t\t\t\t\t\t\t<option key={i} value={country}>\n\t\t\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nimport covidimage from \"./images/covidimage.png\";\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: \"\",\n\t};\n\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\t\tthis.setState({ data: fetchedData });\n\t}\n\n\thandleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\t\tthis.setState({ data: fetchedData, country: country });\n\t};\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img src={covidimage} alt=\"covid 19 image\"></img>\n\t\t\t\t<p></p>\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\n\t\t\t\t<Cards data={data} />\n\t\t\t\t<Chart data={data} country={country} />\n\n\t\t\t\t<Typography variant=\"body2\">Made with ❤️ by Admire Khulumo</Typography>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"container\":\"CountryPicker_container__2vyxG\",\"border\":\"CountryPicker_border__emSAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","module.exports = __webpack_public_path__ + \"static/media/covidimage.d7265326.png\";"],"sourceRoot":""}